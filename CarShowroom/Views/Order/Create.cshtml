@model CarShowroom.Entities.Order

@{
	ViewData["Title"] = "Create";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
<head>
    <link rel="stylesheet" href="/css/PagesStyle.css">
</head>

<body>
    <div class="containerCreateCar">

	<h2>Създаване на поръчка</h2>

	<h4>Поръчка</h4>
	<hr />
	<form asp-action="CreateProcess" method="post">
		<div class="row">
			<div class="column">

				<div class="col-md-4">

					<div asp-validation-summary="ModelOnly" class="text-danger"></div>

					<div class="form-group">

						@Html.DropDownList("CarId",ViewBag.CustomerOptions as SelectList,"Моля изберете кола", new{@class = "form-control", id = "Car", required = "required"})
</div>
						<div class="form-group">

							<span id="original-price"></span>
							<input type="hidden" name="originalPrice" id="original-price-input"/>
							<span asp-validation-for="OriginalPrice" class="text-danger"></span>
						</div>

						<div class="form-group">
							<label asp-for="Quantity" class="control-label">Количество</label>
							<input asp-for="Quantity" class="form-control" id="quantity-input" required />
							<span asp-validation-for="Quantity" class="text-danger"></span>
						</div>




					


				</div>
			</div>
			<div class="column">




				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<div class="form-group">
					<label asp-for="Customer.FirstName" class="control-label"></label>
					<input asp-for="Customer.FirstName" class="form-control" />
					<span asp-validation-for="Customer.FirstName" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Customer.MiddleName" class="control-label"></label>
					<input asp-for="Customer.MiddleName" class="form-control" />
					<span asp-validation-for="Customer.MiddleName" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Customer.LastName" class="control-label"></label>
					<input asp-for="Customer.LastName" class="form-control" />
					<span asp-validation-for="Customer.LastName" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Customer.Address" class="control-label"></label>
					<input asp-for="Customer.Address" class="form-control" />
					<span asp-validation-for="Customer.Address" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Customer.Phone" class="control-label"></label>
					<input asp-for="Customer.Phone" class="form-control" />
					<span asp-validation-for="Customer.Phone" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label> Confirmation Email: </label>
					<input name="email" required class="form-control" />

				</div>

			</div>
			<div class="column">

				<fieldset>
					<legend>Select Extra:</legend>
					@{
						var e = 0;

					}
					@foreach (var extra in ViewBag.ExtrasOptions)
					{
						<div id="extra-@extra.ExtraId">
							<label><input type="checkbox" name="extras[@e].IsChecked" value="true" />@extra.ExtraName</label>
							<br />
							<input type="hidden" name="extras[@(e++)].ExtraId" value="@extra.ExtraId" />

						</div>
					}
				</fieldset>
				<br>
				<div class="form-group">
					<input type="hidden" asp-for="TotalSum" id="total-sum-input" />
					<label><span id="total-price"></span></label>
				</div>
				<br>
				<div class="form-group">
					<input type="submit" value="Създай" class="btn" />
				</div>
				<br>
			</div>
		</div>
	</form>
	<div>
<a href="@Url.Action("Index", "Home")"  class="btnBackToMain">Към начална страница</a>
	</div>
	
</div>
</body>
@section Scripts {
    @{
	await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
			function calculatePrice() {
				var carId = document.getElementById("Car");
				var selectedCar = carId.value;
				var quantity = $('#quantity-input').val();
				var selectedExtras  = [];


				$('div[id^=extra-] input[name^=extras]:checked').each(function() {
		var extraId = $(this).closest('div').attr('id').match(/\d+/)[0];
		selectedExtras.push({ ExtraId: extraId, IsChecked: true });
		console.log(extraId)
	  });

				$.ajax({
					url: '/Order/CalculatePrice',
					type: 'POST',
					data: { carId: selectedCar, quantity: quantity, extra: selectedExtras   },
					success: function(data, status, jqXHR) {
						var price = data.price;
						$('#total-price').text('Total price: ' + price);
						$('#total-sum-input').val(price);
						 var totalSum = 0;
		if (price && typeof price === 'string' && price.match(/\d+/)) {
			totalSum = parseInt(price.match(/\d+/)[0]);
		}

						$('#total-sum').text(totalSum);
						if (data.errorMessage) {
			console.error(data.errorMessage);
			return;
		}
					},
					error: function(jqXHR, status, error) {
						$('#total-price').text('Error calculating price');
					}
				});
			}

			function updateOriginalPrice() {
				console.log("JS code running");
				var carId = document.getElementById("Car");
				var selectedCar = carId.value;
				console.log(selectedCar)
				$.ajax({
					url: "/Order/GetCarPrice",
					type: "GET",
					data: {
						carId: selectedCar
					},
					success: function(data, status, jqXHR) {
						 if (data.errorMessage) {
			console.error(data.errorMessage);
			return;
					}
						var originalPrice = data.ogPrice;
						$("#original-price").text("Original Price: $" + originalPrice);
						$("#original-price-input").val(originalPrice);
					},
					error: function(jqXHR, status, error) {
						console.error(error);
					}
				});
			}
	//			$.ajax({
	//	url: "/Order/CreateProcess",
	//	type: "POST",
	//	data: {
	//		originalPrice: ("#original-price")
	//	}
	//});
				$(document).ready(function() {
					// Call updateOriginalPrice when the page loads
					updateOriginalPrice();

					// Call updateOriginalPrice whenever the car selection changes
					$("#Car").on("input", function() {
						updateOriginalPrice();
					});

					// Call calculatePrice when the quantity or any extra changes
					$('#quantity-input, input[name^=extras]').on('change', function() {
						calculatePrice();
					});

					// Call calculatePrice when the page loads
					calculatePrice();
				});
</script>